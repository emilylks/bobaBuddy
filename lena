import 'package:flutter/material.dart';
import 'package:google_sign_in/google_sign_in.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:myflutter_app/screens/log_in.dart';

var location = 0;
var sweet_tooth = 0;
var results = [0, 0, 0, 0, 0, 0];
var questionNumber = 0;
var quiz = new MenuQuiz();


class MenuQuiz{
var quiz_images = ["alligator", "cat", "dog", "owl"];
/* we need 8 images (1 image per question) */

var coco_nonsweet = [
  "Black Tea Macchiato",
  "Pearl Milk Tea",
  "Honeymilk Tea",
  "Three Guys",
  "Two Ladies"
];

var coco_sweet = [
  "Fresh Taro Milk Tea",
  "Mango Green Tea",
  "Brown Sugar Latte",
  "Mango Smoothie",
  "Chocolate Milk Tea"
];

var pf_sweet = [
  "Passionfruit Tea",
  "Oreo Twist",
  "Strawberry Milk",
  "Matcha Red Bean Milk Tea"
];

var pf_nonsweet = [
  "Black Milk Tea",
  "Honey Milk Tea",
  "Oolong Milk Tea",
  "Taro Smoothie",
  "Matcha Ice Cream",
  "UTO"
];

var questions = [
  "Choose your location.",
  "Do you have a sweet tooth?",
  "What is your favorite study spot?",
  "Where is your dream vacation?",
  "Toes as fingers? or Fingers as toes?",
  "What is your favorite snack?",
  "What color scheme do you like?",
  "What do you do in your free time?"
];

var choices = [
  ["Coco", "Pearl Fever", "", ""],
  ["Yes", "No", "", ""],
  ["Quiet Library", "Coffee Shop", "At Home", "I don't study!"],
  ["Egypt", "New York", "Tokyo", "Bali"],
  ["Toes as Fingers", "Fingers as Toes", "", ""],
  ["Fruits", "Cookies", "Chips", "Nuts"],
  ["Red", "Blue", "White", "Yellow"],
  ["Party", "Watch Movies", "Sleep", "Exercise"]
];

}

class Quiz1 extends StatefulWidget{
  @override
  State<StatefulWidget> createState() {
    return new Quiz1State();
  }
}

class Quiz1State extends State<Quiz1> {
  @override
  Widget build(BuildContext context) {
    return new WillPopScope(
        onWillPop: () async => false,
        child: Scaffold(

          body: new Container(
            margin: const EdgeInsets.all(10.0),
            alignment: Alignment.topCenter,
            child: new Column(
              children: <Widget>[
                new Padding(padding: EdgeInsets.all(20.0)),

                new Container(
                  alignment: Alignment.centerRight,
                  child: new Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: <Widget>[

                      new Text("Question ${questionNumber + 1} of ${quiz.questions.length}",
                        style: new TextStyle(
                            fontSize: 22.0
                        ),),
                    ],
                  ),
                ),


                //image
                new Padding(padding: EdgeInsets.all(10.0)),

                new Image.asset(
                  "images/${quiz.quiz_images[questionNumber]}.jpg",
                ),

                new Padding(padding: EdgeInsets.all(10.0)),

                new Text(quiz.questions[questionNumber],
                  style: new TextStyle(
                    fontSize: 20.0,
                  ),),

                new Padding(padding: EdgeInsets.all(10.0)),

                new Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: <Widget>[

                    //button 1
                    new MaterialButton(
                      minWidth: 120.0,
                      color: Colors.blueGrey,
                      onPressed: (){
                        if (questionNumber == 0) {
                          location = 1;
                          debugPrint("Location: Pearl Fever");
                        }
                        else if (questionNumber == 1) {
                          sweet_tooth = 1;
                          debugPrint("Sweet Selected");
                        }
                        else if (questionNumber == 2) {
                          debugPrint("Quiet Library");
                          if (sweet_tooth == 1) {
                            if (location == 1) {
                              results[questionNumber - 2] = 1;
                            } else {
                              results[questionNumber - 2] = 1;
                            }
                          }
                          else {
                            if (location == 1) {
                              results[questionNumber - 2] = 2;
                            } else {
                              results[questionNumber - 2] = 5;
                            }
                          }
                        }
                        else if (questionNumber == 3) {
                          debugPrint("Egypt");
                          if (sweet_tooth == 1) {
                            if (location == 1) {
                              results[questionNumber - 2] = 3;
                            } else {
                              results[questionNumber - 2] = 5;
                            }
                          } else {
                            if (location == 1)
                              results[questionNumber - 2] = 6;
                            else {
                              results[questionNumber - 2] = 3;
                            }
                          }
                        }
                        else if (questionNumber == 4) {
                          debugPrint("Toes as Fingers");
                          if (sweet_tooth == 1) {
                            if (location == 1) {
                              results[questionNumber - 2] = 1;
                            } else {
                              results[questionNumber - 2] = 5;
                            }
                          } else {
                            if (location == 1)
                              results[questionNumber - 2] = 2;
                            else {
                              results[questionNumber - 2] = 4;
                            }
                          }
                        }
                        else if (questionNumber == 5) {
                          debugPrint("Fruits");
                          if (sweet_tooth == 1) {
                            if (location == 1) {
                              results[questionNumber - 2] = 1;
                            } else {
                              results[questionNumber - 2] = 2;
                            }
                          } else {
                            if (location == 1)
                              results[questionNumber - 2] = 1;
                            else {
                              results[questionNumber - 2] = 4;
                            }
                          }
                        }

                        else if (questionNumber == 6) {
                          debugPrint("Red");
                          if (sweet_tooth == 1) {
                            if (location == 1) {
                              results[questionNumber - 2] = 3;
                            } else {
                              results[questionNumber - 2] = 3;
                            }
                          } else {
                            if (location == 1)
                              results[questionNumber - 2] = 3;
                            else {
                              results[questionNumber - 2] = 5;
                            }
                          }
                        }




                      },
                      child: new Text(quiz.choices[questionNumber][0],
                        style: new TextStyle(
                            fontSize: 20.0,
                            color: Colors.white
                        ),),
                    ),

                    //button 2
                    new MaterialButton(
                      minWidth: 120.0,
                      color: Colors.blueGrey,
                      onPressed: (){

                        if(quiz.choices[questionNumber][1] == quiz.correctAnswers[questionNumber]){
                          debugPrint("Correct");
                          finalScore++;
                        }else{
                          debugPrint("Wrong");
                        }
                        updateQuestion();
                      },
                      child: new Text(quiz.choices[questionNumber][1],
                        style: new TextStyle(
                            fontSize: 20.0,
                            color: Colors.white
                        ),),
                    ),

                  ],
                ),

                new Padding(padding: EdgeInsets.all(10.0)),

                new Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: <Widget>[

                    //button 3
                    new MaterialButton(
                      minWidth: 120.0,
                      color: Colors.blueGrey,
                      onPressed: (){

                        if(quiz.choices[questionNumber][2] == quiz.correctAnswers[questionNumber]){
                          debugPrint("Correct");
                          finalScore++;
                        }else{
                          debugPrint("Wrong");
                        }
                        updateQuestion();
                      },
                      child: new Text(quiz.choices[questionNumber][2],
                        style: new TextStyle(
                            fontSize: 20.0,
                            color: Colors.white
                        ),),
                    ),

                    //button 4
                    new MaterialButton(
                      minWidth: 120.0,
                      color: Colors.blueGrey,
                      onPressed: (){

                        if(quiz.choices[questionNumber][3] == quiz.correctAnswers[questionNumber]){
                          debugPrint("Correct");
                          finalScore++;
                        }else{
                          debugPrint("Wrong");
                        }
                        updateQuestion();
                      },
                      child: new Text(quiz.choices[questionNumber][3],
                        style: new TextStyle(
                            fontSize: 20.0,
                            color: Colors.white
                        ),),
                    ),

                  ],
                ),

                new Padding(padding: EdgeInsets.all(15.0)),

                new Container(
                    alignment: Alignment.bottomCenter,
                    child:  new MaterialButton(
                        minWidth: 240.0,
                        height: 30.0,
                        color: Colors.red,
                        onPressed: resetQuiz,
                        child: new Text("Quit",
                          style: new TextStyle(
                              fontSize: 18.0,
                              color: Colors.white
                          ),)
                    )
                ),




              ],
            ),
          ),

        )
    );
  }

  void resetQuiz(){
    setState(() {
      Navigator.pop(context);
      finalScore = 0;
      questionNumber = 0;
    });
  }



  void updateQuestion(){
    setState(() {
      if(questionNumber == quiz.questions.length - 1){
        Navigator.push(context, new MaterialPageRoute(builder: (context)=> new Summary(score: finalScore,)));

      }else{
        questionNumber++;
      }
    });
  }
}


class Summary extends StatelessWidget{
  final int score;
  Summary({Key key, @required this.score}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return new WillPopScope(
      onWillPop: () async => false,
      child: Scaffold(

        body: new Container(
          child: new Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[

              new Text("Final Score: $score",
                style: new TextStyle(
                    fontSize: 35.0
                ),),

              new Padding(padding: EdgeInsets.all(30.0)),

              new MaterialButton(
                color: Colors.red,
                onPressed: (){
                  questionNumber = 0;
                  finalScore = 0;
                  Navigator.pop(context);
                },
                child: new Text("Reset Quiz",
                  style: new TextStyle(
                      fontSize: 20.0,
                      color: Colors.white
                  ),),)

            ],
          ),
        ),


      ),
    );
  }


}
